name: ai-review-on-push

on:
  push:
    branches: [ main, feat/** ]
    paths: [ "backend/**", "frontend/**" ]

permissions:
  contents: write  # 커밋 코멘트 작성 권한
  actions: read

jobs:
  review:
    name: LLM code review on push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute diff (from previous SHA to current)
        id: diff
        shell: bash
        run: |
          BEFORE="${{ github.event.before }}"
          AFTER="${{ github.sha }}"
          # 안전하게 필요한 범위만 페치
          git fetch --no-tags --prune --depth=2 origin "${{ github.ref_name }}" || true

          # 범위 diff (여러 커밋이 한 번에 push 되어도 커버)
          git diff --unified=0 "$BEFORE" "$AFTER" > diff.patch || true

          # 너무 길면 자르기 (토큰 과다 방지)
          head -c 18000 diff.patch > diff.trunc.patch
          echo "bytes=$(wc -c < diff.trunc.patch)" >> $GITHUB_OUTPUT

      - name: Skip if no diff
        if: steps.diff.outputs.bytes == '0'
        run: echo "No changes to review."

      - name: Build review prompt
        if: steps.diff.outputs.bytes != '0'
        shell: bash
        run: |
          cat > system.txt <<'SYS'
          You are a senior software reviewer.
          Return a terse, actionable review of the provided git diff.
          - Focus on correctness, security, concurrency, resource leaks, nullability, SQL/Redis usage, and performance.
          - Point to specific files/lines from the diff (as shown in the patch) and suggest concrete fixes.
          - Add a short ✅ Summary / ⚠️ Risks / 🛠 Fixes list.
          - If diff only contains scaffolding or trivial changes, say so briefly.
          SYS

          # 디프 내용을 JSON-safe 문자열로
          jq -Rs . < diff.trunc.patch > diff.json

          # Responses API payload 생성 (OpenAI)
          cat > payload.json <<'JSON'
          {
            "model": "gpt-4o-mini",
            "input": [
              { "role": "system", "content": __SYSTEM__ },
              { "role": "user",   "content": __DIFF__ }
            ]
          }
          JSON

          SYSTEM_ESCAPED=$(jq -Rs . < system.txt)
          DIFF_ESCAPED=$(cat diff.json)

          # placeholder 치환
          jq -n --argjson sys "$SYSTEM_ESCAPED" --argjson dif "$DIFF_ESCAPED" '
            (input | .input[0].content = $sys | .input[1].content = $dif)
          ' payload.json > payload.final.json

      - name: Call OpenAI Responses API
        if: steps.diff.outputs.bytes != '0'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        shell: bash
        run: |
          if [ -z "$OPENAI_API_KEY" ]; then
            echo "OPENAI_API_KEY secret is missing"; exit 1
          fi

          # Responses API 호출
          curl -sS https://api.openai.com/v1/responses \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d @payload.final.json \
            | tee openai.json >/dev/null

          # 결과 텍스트 추출 (output_text가 없으면 실패 처리)
          jq -r '.output_text // empty' openai.json > review.md
          if [ ! -s review.md ]; then
            echo "No output_text in response:"; cat openai.json; exit 1
          fi

      - name: Post review comment to the commit
        if: steps.diff.outputs.bytes != '0'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('review.md', 'utf8').slice(0, 65000);
            const { owner, repo } = context.repo;
            await github.rest.repos.createCommitComment({
              owner,
              repo,
              commit_sha: context.sha,
              body
            });

      - name: Upload review artifact (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ai-review
          path: |
            diff.patch
            diff.trunc.patch
            review.md
            openai.json
